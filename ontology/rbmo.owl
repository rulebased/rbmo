Prefix(:=<http://www.purl.org/rbm/rbmo#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(foaf:=<http://xmlns.com/foaf/0.1/>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.purl.org/rbm/rbmo#>
Annotation(dc:creator "Matteo Cavaliere")
Annotation(rdfs:comment "RBMO - An ontology for annotating rule-based models"@en)
Annotation(dc:creator "Goksel Misirli")
Annotation(rdfs:label "Rule-Based Model Ontology"@en)
Annotation(dc:creator "William Waites")
Annotation(dc:creator "Matthew Pocock")

Declaration(Class(:Agent))
Declaration(Class(:BioNetGen))
Declaration(Class(:BoundState))
Declaration(Class(:Kappa))
Declaration(Class(:Model))
Declaration(Class(:Observable))
Declaration(Class(:Pattern))
Declaration(Class(:Rule))
Declaration(Class(:Site))
Declaration(Class(:State))
Declaration(Class(:UnboundState))
Declaration(Class(owl:Thing))
Declaration(ObjectProperty(:agent))
Declaration(ObjectProperty(:hasSite))
Declaration(ObjectProperty(:hasState))
Declaration(ObjectProperty(:hasSubrule))
Declaration(ObjectProperty(:internalState))
Declaration(ObjectProperty(:isBoundBy))
Declaration(ObjectProperty(:isStatusOf))
Declaration(ObjectProperty(:lhs))
Declaration(ObjectProperty(:lhsOf))
Declaration(ObjectProperty(:pattern))
Declaration(ObjectProperty(:rhs))
Declaration(ObjectProperty(:rhsOf))
Declaration(ObjectProperty(:siteOf))
Declaration(ObjectProperty(:stateOf))
Declaration(ObjectProperty(:status))
Declaration(ObjectProperty(:subruleOf))
Declaration(ObjectProperty(owl:topObjectProperty))
Declaration(AnnotationProperty(dc:creator))
Declaration(AnnotationProperty(dc:date))
Declaration(AnnotationProperty(dc:title))
Declaration(AnnotationProperty(rdfs:comment))
Declaration(AnnotationProperty(rdfs:label))
Declaration(AnnotationProperty(rdfs:seeAlso))
Declaration(Datatype(rdf:PlainLiteral))
AnnotationAssertion(rdfs:label :Agent "Agent"@en)
AnnotationAssertion(rdfs:comment :Agent "A definition of an entity that can form part of a Rule."@en)
AnnotationAssertion(rdfs:comment :BioNetGen "A model implemented in BioNetGen."@en)
AnnotationAssertion(rdfs:label :BioNetGen "BioNetGen"@en)
SubClassOf(:BioNetGen :Model)
DisjointClasses(:BioNetGen :Kappa)
AnnotationAssertion(rdfs:comment :BoundState "Specifies that a site in a pattern is bound."@en)
AnnotationAssertion(rdfs:label :BoundState "Unknown"@en)
DisjointClasses(:BoundState :UnboundState)
AnnotationAssertion(rdfs:comment :Kappa "A model implemented in Kappa."@en)
AnnotationAssertion(rdfs:label :Kappa "Kappa")
SubClassOf(:Kappa :Model)
AnnotationAssertion(rdfs:label :Model "Model"@en)
AnnotationAssertion(rdfs:comment :Model "A model in a rule-based language."@en)
AnnotationAssertion(rdfs:comment :Observable "A group of Patterns that is observed or recorded"@en)
AnnotationAssertion(rdfs:label :Observable "Observable"@en)
AnnotationAssertion(rdfs:label :Pattern "Pattern"@en)
AnnotationAssertion(rdfs:comment :Pattern "A pattern that can match an agent in terms of the state of its sites."@en)
AnnotationAssertion(rdfs:label :Rule "Rule"@en)
AnnotationAssertion(rdfs:comment :Rule "A rule expressing interactions between Agents."@en)
AnnotationAssertion(rdfs:label :Site "Site"@en)
AnnotationAssertion(rdfs:comment :Site "A definition of a site of an Agent."@en)
AnnotationAssertion(rdfs:comment :State "A definition of possible internal state of a Site."@en)
AnnotationAssertion(rdfs:label :State "State"@en)
AnnotationAssertion(rdfs:label :UnboundState "Nothing"@en)
AnnotationAssertion(rdfs:label :UnboundState "Specifies that a site in a pattern is unbound"@en)
AnnotationAssertion(rdfs:comment :agent "Specifies which Agent a pattern is meant to match."@en)
AnnotationAssertion(rdfs:label :agent "agent"@en)
ObjectPropertyDomain(:agent :Pattern)
ObjectPropertyRange(:agent :Agent)
AnnotationAssertion(rdfs:label :hasSite "hasSite"@en)
AnnotationAssertion(rdfs:comment :hasSite "Specifies that an Agent has a Site."@en)
InverseObjectProperties(:hasSite :siteOf)
ObjectPropertyDomain(:hasSite :Agent)
ObjectPropertyRange(:hasSite :Site)
AnnotationAssertion(rdfs:comment :hasState "Specifies that a Site has a a possible configuration State. Used in declarations."@en)
AnnotationAssertion(rdfs:label :hasState "hasState"@en)
InverseObjectProperties(:hasState :stateOf)
ObjectPropertyDomain(:hasState :Site)
ObjectPropertyRange(:hasState :State)
AnnotationAssertion(rdfs:label :hasSubrule "hasSubrule"@en)
AnnotationAssertion(rdfs:comment :hasSubrule "Specifies that a rule has a subrule, for example part of a KaSim rule which uses tokens. Its value is the identifier for the subrule."@en)
InverseObjectProperties(:hasSubrule :subruleOf)
ObjectPropertyDomain(:hasSubrule :Rule)
ObjectPropertyRange(:hasSubrule :Rule)
AnnotationAssertion(rdfs:label :internalState "Links a status in a Pattern to a State"@en)
AnnotationAssertion(rdfs:label :internalState "internalState"@en)
ObjectPropertyRange(:internalState :State)
AnnotationAssertion(rdfs:label :isBoundBy "isBoundBy"@en)
AnnotationAssertion(rdfs:comment :isBoundBy "Specifies the bond that a site in a Pattern is bound or unbound."@en)
SubObjectPropertyOf(:isBoundBy owl:topObjectProperty)
AnnotationAssertion(rdfs:label :isStatusOf "isStatusOf"@en)
AnnotationAssertion(rdfs:comment :isStatusOf "Links a status in a Pattern to a Site"@en)
ObjectPropertyRange(:isStatusOf :Site)
AnnotationAssertion(rdfs:comment :lhs "Specifies a pattern on the left-hand side of a Rule."@en)
AnnotationAssertion(rdfs:label :lhs "lhs"@en)
InverseObjectProperties(:lhs :lhsOf)
ObjectPropertyDomain(:lhs :Rule)
ObjectPropertyRange(:lhs :Pattern)
AnnotationAssertion(rdfs:label :lhsOf "lhsOf"@en)
AnnotationAssertion(rdfs:comment :lhsOf "The left-hand side of an Rule"@en)
ObjectPropertyDomain(:lhsOf :Pattern)
ObjectPropertyRange(:lhsOf :Rule)
AnnotationAssertion(rdfs:label :pattern "pattern"@en)
AnnotationAssertion(rdfs:comment :pattern "Specifies the pattern that match an observable."@en)
AnnotationAssertion(rdfs:comment :rhs "Specifies a pattern on the right-hand side of a Rule."@en)
AnnotationAssertion(rdfs:label :rhs "rhs"@en)
InverseObjectProperties(:rhs :rhsOf)
ObjectPropertyDomain(:rhs :Rule)
ObjectPropertyRange(:rhs :Pattern)
AnnotationAssertion(rdfs:label :rhsOf "rhsOf"@en)
AnnotationAssertion(rdfs:comment :rhsOf "The right-hand side of an Rule"@en)
ObjectPropertyDomain(:rhsOf :Pattern)
ObjectPropertyRange(:rhsOf :Rule)
AnnotationAssertion(rdfs:comment :siteOf "Specifies that a Site is on an Agent."@en)
AnnotationAssertion(rdfs:label :siteOf "siteOf"@en)
ObjectPropertyDomain(:siteOf :Site)
ObjectPropertyRange(:siteOf :Agent)
AnnotationAssertion(rdfs:label :stateOf "stateOf"@en)
AnnotationAssertion(rdfs:comment :stateOf "Specifies that a State is a possible configuration of a Site. Used in declarations."@en)
ObjectPropertyDomain(:stateOf :State)
ObjectPropertyRange(:stateOf :Site)
AnnotationAssertion(rdfs:label :status "status"@en)
AnnotationAssertion(rdfs:comment :status "Specifies the status of a particular site (and state) in a pattern."@en)
AnnotationAssertion(rdfs:label :subruleOf "subruleOf"@en)
AnnotationAssertion(rdfs:comment :subruleOf "Specifies that a rule is subrule of another rule."@en)
)